pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                script {
                    // Maven build command
                    sh './mvnw clean install'
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    // Run tests
                    sh './mvnw test'
                }
            }
        }

        stage('Deploy to Staging') {
            when {
                expression {
                    currentBuild.result == null || currentBuild.result == 'SUCCESS'
                }
            }
            steps {
                script {
                    // Deployment to staging (e.g., Docker or Tomcat)
                    sh 'docker-compose -f docker-compose.staging.yml up -d'
                }
            }
        }
    }

    post {
        success {
            emailext to: 'team@example.com',
                    subject: "SUCCESS: ${env.JOB_NAME} - ${env.BUILD_NUMBER}",
                    body: "Build and deployment to staging were successful."
            slackSend channel: '#deployments', message: "Deployment to staging successful: ${env.JOB_NAME} #${env.BUILD_NUMBER}"
        }
        failure {
            emailext to: 'team@example.com',
                    subject: "FAILURE: ${env.JOB_NAME} - ${env.BUILD_NUMBER}",
                    body: "Build or deployment failed."
            slackSend channel: '#deployments', message: "Deployment failed: ${env.JOB_NAME} #${env.BUILD_NUMBER}"
        }
    }
}